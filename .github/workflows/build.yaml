name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
  release:
    types: [published]

jobs:
  publish:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'release'
    env:
      python_version_publish: "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: ${{ runner.os }}-python${{ env.python_version_publish }}-pipcache
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version_publish }}
      - name: Install dependencies
        run: |
          set -eux
          if ! hatch version
          then
              make publish-installdeps
          fi
          hatch version
      - name: Assert version
        run: |
          set -eux
          test refs/tags/v`hatch version` == "${{ github.ref }}"
      - name: Publish to pypi
        run: make publish
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
          HATCH_INDEX_REPO: ${{ env.PYPI_REPO }}

  test:
    timeout-minutes: 5
    strategy:
      matrix:
        # Available versions:
        # https://github.com/actions/python-versions/blob/main/versions-manifest.json
        python-version: [
          #"3.5", "3.6", "3.7", 
          "3.8", "3.9", "3.10", "3.11", 
          "pypy-3.8"
        ]
        runs-on: [ubuntu-latest]
#        include:
#          - python-version: "3.4"
#            runs-on: ubuntu-18.04
#          - python-version: "3.3"
#            runs-on: ubuntu-18.04
    env:
      python_version_codecov: "3.11"
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache packages
        # https://github.com/actions/cache/issues/152
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: ${{ runner.os }}-python${{ matrix.python-version }}-pipcache
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          set -eux
          pip install . coverage codecov
      - name: Run test
        run: |
          set -eux
          python --version
          flake8 --version
          make test
      - name: Run codecov
        uses: codecov/codecov-action@v2
        if: matrix.python-version == env.python_version_codecov

  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
      python_version_lint: "3.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: ${{ runner.os }}-python${{ env.python_version_lint }}-pipcache
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version_lint }}
      - name: Install dependencies
        run: |
          set -eux
          pip install .[dev]
      - name: Run linter
        run: make lint
